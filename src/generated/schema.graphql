### This file was generated by Nexus Schema
### Do not make changes to this file directly


"""A client ip takes ownership of CS token from the sourceIp"""
type AcquireCS {
  acquiredAt: String!
  ip: String!
  sourceIp: String!
}

"""Clients to request and acquire the single token for CS"""
type Client {
  connected: Boolean!
  connectedAt: String!
  disconnectedAt: String!
  id: Int!
  ip: String!
  name: String!
  processId: String

  """
  The client ip associated request parent record(always the same two record using ip)
  """
  requestParent: RequestParent!
}

"""Connected client to an ip on network CS"""
type ConnectedClient {
  connectedAt: String!
  processId: String!
  sourceIp: String!
}

"""Disconnected client from an ip on network CS"""
type DisconnectedClient {
  disconnectedAt: String!
  sourceIp: String!
}

type Mutation {
  connectClientCS(processId: String!, sourceIp: String!): ConnectedClient!
  createAcquireCS(ip: String!, sourceIp: String!): AcquireCS!
  createClient(connected: Boolean!, ip: String!, name: String!): Client!
  createRequestCS(originalIp: String!, parentIp: String!, relayed: Boolean!, sourceIp: String!): RequestCS!
  disconnectClientCS(sourceIp: String!): DisconnectedClient!
}

type Query {
  getClients(range: RangePort!): [Client]!
}

"""
Port range for list of clients. Ie. all from 5010 to 5020 (from and to)
"""
input RangePort {
  from: Int!
  to: Int!
}

"A request for CS from a client source ip to its currently known parent ip in the distributed tree\nIf relayed Request, it is because a parentIP was not the root, or is unreachable.\nThe originalIp is the real client wanting to enter CS and acquire token.\nAnd when relayed, the sourceIp was the parent ip of the previous relayed sourceIp.\n"
type RequestCS {
  originalIp: String!
  parentIp: String!
  relayed: Boolean!
  requestedAt: String!
  sourceIp: String!
}

"""Clients to request and acquire the single token for CS"""
type RequestParent {
  clientIp: String!
  id: Int!
}

type Subscription {
  acquireCS_Created: AcquireCS
  clientCS_Connected(sourceIp: String!): ConnectedClient
  clientCS_Disconnected(sourceIp: String!): DisconnectedClient
  requestCS_Created: RequestCS
}