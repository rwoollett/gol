
services:
  cstoken:
    container_name: cstoken
    image: cstoken:v1.0
    build:
      context: .
      dockerfile: Dockerfile
    # develop:
    #   watch:
    #     - path: src/
    #       action: sync
    #       target: /app/src
    restart: unless-stopped
    env_file: .env
    environment:
      DATABASE_URL: ${CSTOKEN_DATABASE_URL}
      PORT: '3002'      
      REDIS_HOST: ${CSTOKEN_REDIS_HOST}
      REDIS_PORT: ${CSTOKEN_REDIS_PORT}
      REDIS_PASS: ${CSTOKEN_REDIS_PASS}
    ports:
      - '3002:3002'
    networks:
      - cstoken-network
    depends_on:
      cstokenDB:
        condition: service_started
      cache:
        condition: service_healthy

      
  cstokenDB:
    container_name: cstokenDB
    #platform: linux/amd64 #for platform error on Apple M1 chips
    restart: unless-stopped
    env_file: .env
    image: postgres:13.6
    environment:
      POSTGRES_USER: ${CSTOKEN_DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${CSTOKEN_DATABASE_PASSWORD}
      POSTGRES_DB: ${CSTOKEN_DATABASE_NAME}
    volumes:
      - cstoken-data:/var/lib/postgresql/data/ #using a volume

    ports:
      - '5435:5432'
    networks:
      - cstoken-network

  cache:
    container_name: cache
    image: redis:6.2-alpine
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass ${CSTOKEN_REDIS_PASS}
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 2
      start_period: 5s
    volumes: 
      - cache:/data
    networks:
      - cstoken-network

volumes:
  cstoken-data:
  cache:

networks:
  cstoken-network:
    name: CSToken
    driver: bridge